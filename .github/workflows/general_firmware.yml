name: general_firmware

on:
  # schedule:
  #   # daily build on UTC+8 7:30
  #   - cron:  '30 18 * * 2,5'
  workflow_dispatch:
    inputs:
      buildlean:
        description: 'buld lean?'
        default: 'false'
        required: false
      device:
        description: 'select device to build'
        default: 'x86'
        required: false
      branch:
        description: 'seleclt openwrt branch'
        default: 'master'
        required: false

jobs:

  generate_immortal_slim_firmware:
    name: Generate ${{ github.event.client_payload.device || github.event.inputs.device }} immortal slim firmware
    runs-on: ubuntu-20.04
    env:
      DEVICE: ${{ github.event.client_payload.device || github.event.inputs.device }}
      BRANCH: master
    if: github.event.client_payload.buildlean=='false' || github.event.inputs.buildlean=='false'   

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Generate firmware immortal
        run: |
          sudo apt update && sudo apt install qemu-utils
          sudo sysctl vm.swappiness=0
          ulimit -SHn 65000
          curl -L https://github.com/aotsukiqx/nanopi-openwrt/releases/download/ib_cache/ib-$DEVICE.tar.xz | tar -Jxvf -
          mv *imagebuilder* ib && cd ib
          . $GITHUB_WORKSPACE/scripts/merge_files.sh
          mkdir -p files/local_feed && sudo mount --bind packages files/local_feed
          sed -i 's/luci-app-[^ ]*//g' include/target.mk $(find target/ -name Makefile)
          sed -i 's/$(OPKG) install $(BUILD_PACKAGES)/$(OPKG) install --force-overwrite $(BUILD_PACKAGES)/' Makefile
          ls packages/*.ipk | xargs -n1 basename > package.files
          PACKAGES=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE | grep -v CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          PACKAGES="$PACKAGES `grep -o luci-i18n-opkg-zh-cn package.files || true`"
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn" FILES="files"

          mkdir -p $GITHUB_WORKSPACE/release
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/$DEVICE-slim.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum $DEVICE-slim.img.gz > $DEVICE-slim.img.gz.md5
          gzip -dc $DEVICE-slim.img.gz | md5sum | sed "s/-/$DEVICE-slim.img/" > $DEVICE-slim.img.md5
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release/*
          tag: ${{env.strDate}}.${{env.BRANCH}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} ${{env.BRANCH}} 自动发布

  generate_lean_slim_firmware:
    name: Generate ${{ github.event.client_payload.device || github.event.inputs.device }} lean slim firmware
    runs-on: ubuntu-20.04
    env:
      DEVICE: ${{ github.event.client_payload.device || github.event.inputs.device }}
      BRANCH: master
    if: github.event.client_payload.buildlean=='true' || github.event.inputs.buildlean=='true'  

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Generate firmware lean
        run: |
          sudo apt update && sudo apt install qemu-utils
          sudo sysctl vm.swappiness=0
          ulimit -SHn 65000
          curl -L https://github.com/aotsukiqx/nanopi-openwrt/releases/download/ib_cache/iblean-$DEVICE.tar.xz | tar -Jxvf -
          mv *imagebuilder* ib && cd ib
          . $GITHUB_WORKSPACE/scripts/merge_files.sh
          mkdir -p files/local_feed && sudo mount --bind packages files/local_feed
          sed -i 's/luci-app-[^ ]*//g' include/target.mk $(find target/ -name Makefile)
          sed -i 's/$(OPKG) install $(BUILD_PACKAGES)/$(OPKG) install --force-overwrite $(BUILD_PACKAGES)/' Makefile
          ls packages/*.ipk | xargs -n1 basename > package.files
          PACKAGES=$(cat $GITHUB_WORKSPACE/$DEVICE.diffconfig | grep CONFIG_PACKAGE | grep -v CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          PACKAGES="$PACKAGES `grep -o luci-i18n-opkg-zh-cn package.files || true`"
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn -luci-app-ssr-plus -kmod-i40evf  -kmod-usb-audio -kmod-sound-via82xx -kmod-sound-i8x0 -kmod-sound-hda-intel -kmod-sound-hda-core -kmod-sound-hda-codec-via -kmod-sound-hda-codec-realtek -kmod-sound-hda-codec-hdmi"

          mkdir -p $GITHUB_WORKSPACE/release
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/lean-$DEVICE-slim.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum lean-$DEVICE-slim.img.gz > lean-$DEVICE-slim.img.gz.md5
          gzip -dc lean-$DEVICE-slim.img.gz | md5sum | sed "s/-/lean-$DEVICE-slim.img/" > lean-$DEVICE-slim.img.md5
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release/*
          tag: ${{env.strDate}}.${{env.BRANCH}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} ${{env.BRANCH}} 自动发布

  generate_immortal_firmware:
    name: Generate ${{ github.event.client_payload.device || github.event.inputs.device }} immortal firmware
    runs-on: ubuntu-20.04
    env:
      DEVICE: ${{ github.event.client_payload.device || github.event.inputs.device }}
      BRANCH: master
    if: github.event.client_payload.buildlean=='false' || github.event.inputs.buildlean=='false'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Generate firmware immortal
        run: |
          sudo apt update && sudo apt install qemu-utils
          sudo sysctl vm.swappiness=0
          ulimit -SHn 65000
          curl -L https://github.com/aotsukiqx/nanopi-openwrt/releases/download/ib_cache/ib-$DEVICE.tar.xz | tar -Jxvf -
          set -x
          mv *imagebuilder* ib && cd ib
          . $GITHUB_WORKSPACE/scripts/merge_files.sh
          sed -i '/local/d;s/#//' files/etc/opkg/distfeeds.conf
          sed -i 's/luci-app-[^ ]*//g' include/target.mk $(find target/ -name Makefile)
          sed -i 's/$(OPKG) install $(BUILD_PACKAGES)/$(OPKG) install --force-overwrite $(BUILD_PACKAGES)/' Makefile
          ls packages/*.ipk | xargs -n1 basename > package.files
          PACKAGES=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE | grep -v CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          PACKAGES="$PACKAGES `grep -o luci-i18n-opkg-zh-cn package.files || true`"
          LUCI=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE_luci-app | grep -v docker | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          LP=$(echo $LUCI | sed 's/-app-/-i18n-/g;s/ /\n/g' | xargs -n1 -i grep -o {}-zh-cn package.files | xargs echo)
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn" FILES="files"

          mkdir -p $GITHUB_WORKSPACE/release
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/$DEVICE.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum $DEVICE.img.gz > $DEVICE.img.gz.md5
          gzip -dc $DEVICE.img.gz | md5sum | sed "s/-/$DEVICE.img/" > $DEVICE.img.md5
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV

          if [[ ${{ github.event.client_payload.device || github.event.inputs.device }} == *"r1s"* ]]; then
            exit 0
          fi
          cd $GITHUB_WORKSPACE/ib
          rm -rf bin/
          LUCI=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          LP=$(echo $LUCI | sed 's/-app-/-i18n-/g;s/ /\n/g' | xargs -n1 -i grep -o {}-zh-cn package.files | xargs echo | xargs echo)
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn" FILES="files"
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/$DEVICE-with-docker.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum $DEVICE-with-docker.img.gz > $DEVICE-with-docker.img.gz.md5
          gzip -dc $DEVICE-with-docker.img.gz | md5sum | sed "s/-/$DEVICE-with-docker.img/" > $DEVICE-with-docker.img.md5
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release/*
          tag: ${{env.strDate}}.${{env.BRANCH}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} ${{env.BRANCH}} 自动发布

  generate_lean_firmware:
    name: Generate ${{ github.event.client_payload.device || github.event.inputs.device }} lean firmware
    runs-on: ubuntu-20.04
    env:
      DEVICE: ${{ github.event.client_payload.device || github.event.inputs.device }}
      BRANCH: master
    if: github.event.client_payload.buildlean=='true' || github.event.inputs.buildlean=='true'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Generate firmware lean
        run: |
          sudo apt update && sudo apt install qemu-utils
          sudo sysctl vm.swappiness=0
          ulimit -SHn 65000
          curl -L https://github.com/aotsukiqx/nanopi-openwrt/releases/download/ib_cache/iblean-$DEVICE.tar.xz | tar -Jxvf -
          set -x
          mv *imagebuilder* ib && cd ib
          . $GITHUB_WORKSPACE/scripts/merge_files.sh
          sed -i '/local/d;s/#//' files/etc/opkg/distfeeds.conf
          sed -i 's/luci-app-[^ ]*//g' include/target.mk $(find target/ -name Makefile)
          sed -i 's/$(OPKG) install $(BUILD_PACKAGES)/$(OPKG) install --force-overwrite $(BUILD_PACKAGES)/' Makefile
          ls packages/*.ipk | xargs -n1 basename > package.files
          PACKAGES=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE | grep -v CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          PACKAGES="$PACKAGES `grep -o luci-i18n-opkg-zh-cn package.files || true`"
          LUCI=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE_luci-app | grep -v docker | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          LP=$(echo $LUCI | sed 's/-app-/-i18n-/g;s/ /\n/g' | xargs -n1 -i grep -o {}-zh-cn package.files | xargs echo)
          sed -i 's/CONFIG_TARGET_ROOTFS_PARTSIZE\=600/CONFIG_TARGET_ROOTFS_PARTSIZE\=800/g' .config
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn" FILES="files"

          mkdir -p $GITHUB_WORKSPACE/release
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/lean-$DEVICE.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum lean-$DEVICE.img.gz > lean-$DEVICE.img.gz.md5
          gzip -dc lean-$DEVICE.img.gz | md5sum | sed "s/-/lean-$DEVICE.img/" > lean-$DEVICE.img.md5
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV

          if [[ ${{ github.event.client_payload.device || github.event.inputs.device }} == *"r1s"* ]]; then
            exit 0
          fi
          cd $GITHUB_WORKSPACE/ib
          rm -rf bin/
          LUCI=$(cat $GITHUB_WORKSPACE/$DEVICE.config.seed $GITHUB_WORKSPACE/common.seed | grep CONFIG_PACKAGE_luci-app | sed 's/CONFIG_PACKAGE_//;s/=y//' | xargs -n1 -i grep -o {} package.files | sort -u | xargs echo)
          LP=$(echo $LUCI | sed 's/-app-/-i18n-/g;s/ /\n/g' | xargs -n1 -i grep -o {}-zh-cn package.files | xargs echo | xargs echo)
          make image PACKAGES="$PACKAGES $LUCI $LP luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn" FILES="files"
          mv $(ls -1 ./bin/targets/*/*/*img.gz | head -1) $GITHUB_WORKSPACE/release/lean-$DEVICE-with-docker.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum lean-$DEVICE-with-docker.img.gz > lean-$DEVICE-with-docker.img.gz.md5
          gzip -dc lean-$DEVICE-with-docker.img.gz | md5sum | sed "s/-/lean-$DEVICE-with-docker.img/" > lean-$DEVICE-with-docker.img.md5

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release/*
          tag: ${{env.strDate}}.${{env.BRANCH}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} ${{env.BRANCH}} 自动发布
